@page "/Posts"
@using Domain
@using HttpClients.ClientInterfaces

@inject IPostService postService
@inject NavigationManager navigationManager

<AuthorizeView>
    <Authorized>
        <h3>Welcome back, @context.User.Identity.Name!</h3>
    </Authorized>
</AuthorizeView>

@if (posts == null)
{
}
else if (!posts.Any())
{
    <p>No Posts to display</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Author</th>
            <th>Title</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var post in posts)
        {
            <tr onclick="@(() => navigationManager.NavigateTo($"Posts/{post.Id}"))">
                <td>@post.Author.Username</td>
                <td>@post.Title</td>
            </tr>
        }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(message))
{
    <label style="color: red">@message</label>
}

@code {
    private IEnumerable<Post>? posts;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
    }

    private async Task LoadPosts()
    {
        try
        {
            posts = await postService.GetAsync(null, null, null, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            message = e.Message;
        }
    }
}